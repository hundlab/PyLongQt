
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_voltage_clamp_simple_example.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_voltage_clamp_simple_example.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_voltage_clamp_simple_example.py:


*********************
Simple Voltage Clamp
*********************

This example illustrates how to setup and run a voltage clamp simulation.
These simulations hold the cell's transmembrane voltage `vOld` to a fixed value
for specified lengths of time. They are most useful for measuring the cell's 
response to specific voltages. This example assumes that you have gone through
the simple current clamp example which explains the general LongQt simulation
setup.

.. GENERATED FROM PYTHON SOURCE LINES 18-20

Setup & Run the Simulation
---------------------------

.. GENERATED FROM PYTHON SOURCE LINES 20-26

.. code-block:: default


    import PyLongQt as pylqt

    proto = pylqt.protoMap['Voltage Clamp Protocol']()
    proto.setCellByName('Human Ventricular (Ten Tusscher 2004)')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 27-32

The initial setup is similar to the current clamp setup with the exception
that we create a voltage clamp protocol instead. Optionally we could set 
cell options if that is desired. The voltage clamp protocol can be configured
using the protocol's settings, the trace's variable selection, and the
measure's selection.

.. GENERATED FROM PYTHON SOURCE LINES 32-44

.. code-block:: default


    proto.tMax = 150
    proto.meastime = 0
    proto.writetime = 0


    varSel = proto.cell.variableSelection
    varSel.add('iNa')
    proto.cell.variableSelection = varSel

    proto.measureMgr.addMeasure('iNa', {'min', 'avg'})








.. GENERATED FROM PYTHON SOURCE LINES 45-50

One difference from the current clamp simulation is that the measure will
take measurements for every voltage clamp period, rather than for each
beat. To configure which voltage clamps will be applied we use the 
:py:data:`Protocol.clamps`. The `clamps` object is a list of start times
to apply a voltage, and the voltage to apply at that time until the next time.

.. GENERATED FROM PYTHON SOURCE LINES 50-53

.. code-block:: default


    proto.clamps.insert(0, -80)








.. GENERATED FROM PYTHON SOURCE LINES 54-57

First we insert a clamp starting at time 0 (ms) which will clamp the cell
membrane voltage :py:data:`Cell.vOld` to a voltage of -80 (mV). This clamp
will be applied until the another clamp takes effect.

.. GENERATED FROM PYTHON SOURCE LINES 57-62

.. code-block:: default


    proto.clamps.insert(100, 10)
    proto.clamps.insert(120, -40)
    list(proto.clamps)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(0.0, -80.0), (100.0, 10.0), (120.0, -40.0)]



.. GENERATED FROM PYTHON SOURCE LINES 63-65

These are the clamps we have added, they will always be displayed in order
by their start times. Now the simulation is all setup and can be run.

.. GENERATED FROM PYTHON SOURCE LINES 65-72

.. code-block:: default


    sim_runner = pylqt.RunSim()
    sim_runner.setSims(proto)
    sim_runner.run()
    sim_runner.wait()









.. GENERATED FROM PYTHON SOURCE LINES 73-78

Plot the Results
----------------

Reading and plotting the saved data can be preformed in the same manor
as for the current clamp simulation.

.. GENERATED FROM PYTHON SOURCE LINES 79-87

.. code-block:: default



    import pandas as pd
    import numpy as np
    import matplotlib.pyplot as plt

    [trace], [meas] = pylqt.DataReader.readAsDataFrame(proto.datadir)








.. GENERATED FROM PYTHON SOURCE LINES 88-90

The voltage plot shows is that voltage is being clamped to the desired
values.

.. GENERATED FROM PYTHON SOURCE LINES 90-96

.. code-block:: default


    plt.figure()
    plt.plot('t', 'vOld', data=trace)
    plt.xlabel('Time (ms)')
    plt.ylabel('Voltage (mV)')




.. image:: /auto_examples/images/sphx_glr_plot_voltage_clamp_simple_example_001.png
    :alt: plot voltage clamp simple example
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Text(35.472222222222214, 0.5, 'Voltage (mV)')



.. GENERATED FROM PYTHON SOURCE LINES 97-100

The measurements are recorded once per clamp, regardless of whether the
cell had a response. Looking at the measurements for the sodium current, 
we can see that only the 10 mV clamp at 100 ms had a response

.. GENERATED FROM PYTHON SOURCE LINES 100-108

.. code-block:: default


    clamp_n = (np.arange(meas.shape[0])+1).astype('str')

    plt.figure('Peak Sodium Current vs Beat')
    plt.bar(clamp_n, meas[('iNa', 'min')])
    plt.ylabel('Peak Sodium Current (pA/pF)')
    plt.xlabel('Clamp')




.. image:: /auto_examples/images/sphx_glr_plot_voltage_clamp_simple_example_002.png
    :alt: plot voltage clamp simple example
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Text(0.5, 23.52222222222222, 'Clamp')



.. GENERATED FROM PYTHON SOURCE LINES 109-111

The voltage of +10 mV elicited a current response from the sodium channel.
We can trim the sodium current trace to that time-period and produce a plot.

.. GENERATED FROM PYTHON SOURCE LINES 111-118

.. code-block:: default


    trace_subset = trace[(trace['t'] > 100) & (trace['t'] < 120)]

    plt.figure()
    plt.plot('t', 'iNa', data=trace_subset)
    plt.ylabel('Sodium Current (pA/pF)')
    plt.xlabel('Time (ms)')



.. image:: /auto_examples/images/sphx_glr_plot_voltage_clamp_simple_example_003.png
    :alt: plot voltage clamp simple example
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Text(0.5, 23.52222222222222, 'Time (ms)')




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.472 seconds)


.. _sphx_glr_download_auto_examples_plot_voltage_clamp_simple_example.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_voltage_clamp_simple_example.py <plot_voltage_clamp_simple_example.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_voltage_clamp_simple_example.ipynb <plot_voltage_clamp_simple_example.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
